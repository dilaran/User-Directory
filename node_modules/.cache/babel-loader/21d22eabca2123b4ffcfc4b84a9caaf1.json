{"ast":null,"code":"var _jsxFileName = \"/Users/dn/User-Directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends\n    };\n\n    this.remoteEmployee = id => {\n      const friends = this.state.friends.filter(friend => friend.location === \"Beverly Hills\");\n      this.setState({\n        friends\n      });\n    };\n\n    this.sortBy = key => {\n      let arrayCopy = [...this.state.data];\n      arrayCopy.sort(this.compareBy(key));\n      this.setState({\n        data: arrayCopy\n      });\n    };\n  }\n\n  // sortEmployee = id => \n  // {\n  //         // function x (a, b){\n  //         //   const payA = a.pay;\n  //         //   const payB = b.pay;\n  //         //   let comparison = 0;\n  //         //   if (payA < payB) {\n  //         //     comparison = 1;\n  //         //   } else if (payA > payB) {\n  //         //     comparison = -1;\n  //         //   }\n  //         //   return comparison;\n  //         // }\n  //         friends.sort(this.name);\n  //         this.setState({ friends });\n  //       };\n  //       this.sortBy.bind(this);\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Title, {\n      remoteEmployee: this.remoteEmployee,\n      sortEmployee: this.sortEmployee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Employee list\"), this.state.friends.map(friend => React.createElement(FriendCard, {\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      pay: friend.pay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dn/User-Directory/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","remoteEmployee","id","filter","friend","location","setState","sortBy","key","arrayCopy","data","sort","compareBy","render","sortEmployee","map","name","image","occupation","pay"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;;AAAA,SAM5BG,cAN4B,GAMXC,EAAE,IAAI;AACf,YAAMJ,OAAO,GAAG,KAAKE,KAAL,CAAWF,OAAX,CAAmBK,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACC,QAAP,KAAoB,eAAxD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KATqB;;AAAA,SAW5BS,MAX4B,GAWnBC,GAAG,IAAI;AACR,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWU,IAAf,CAAhB;AACAD,MAAAA,SAAS,CAACE,IAAV,CAAe,KAAKC,SAAL,CAAeJ,GAAf,CAAf;AACA,WAAKF,QAAL,CAAc;AAACI,QAAAA,IAAI,EAAED;AAAP,OAAd;AACD,KAfqB;AAAA;;AAiB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACAI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACA,MAAA,cAAc,EAAE,KAAKZ,cADrB;AAEA,MAAA,YAAY,EAAI,KAAKa,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAMG,KAAKd,KAAL,CAAWF,OAAX,CAAmBiB,GAAnB,CAAuBX,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,EAAE,EAAEA,MAAM,CAACF,EADb;AAEE,MAAA,GAAG,EAAEE,MAAM,CAACF,EAFd;AAGE,MAAA,IAAI,EAAEE,MAAM,CAACY,IAHf;AAIE,MAAA,KAAK,EAAEZ,MAAM,CAACa,KAJhB;AAKE,MAAA,UAAU,EAAEb,MAAM,CAACc,UALrB;AAME,MAAA,QAAQ,EAAEd,MAAM,CAACC,QANnB;AAOE,MAAA,GAAG,EAAED,MAAM,CAACe,GAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CANH,CADF;AAoBD;;AAxDyB;;AA0D5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\nremoteEmployee = id => {\n        const friends = this.state.friends.filter(friend => friend.location === \"Beverly Hills\");\n        this.setState({ friends });\n      };\n\nsortBy = key => {\n        let arrayCopy = [...this.state.data];\n        arrayCopy.sort(this.compareBy(key));\n        this.setState({data: arrayCopy});\n      }\n    \n// sortEmployee = id => \n// {\n//         // function x (a, b){\n//         //   const payA = a.pay;\n//         //   const payB = b.pay;\n//         //   let comparison = 0;\n//         //   if (payA < payB) {\n//         //     comparison = 1;\n//         //   } else if (payA > payB) {\n//         //     comparison = -1;\n//         //   }\n//         //   return comparison;\n//         // }\n//         friends.sort(this.name);\n//         this.setState({ friends });\n//       };\n//       this.sortBy.bind(this);\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title\n        remoteEmployee={this.remoteEmployee}\n        sortEmployee = {this.sortEmployee}\n         />\n        <Title>Employee list</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            pay={friend.pay}\n          />\n        ))}\n      </Wrapper>\n    );\n  };\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}